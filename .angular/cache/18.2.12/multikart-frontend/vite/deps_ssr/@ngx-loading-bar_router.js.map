{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngx-loading-bar/router/fesm2015/ngx-loading-bar-router.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, RouterModule } from '@angular/router';\nimport * as i2 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nclass LoadingBarRouterModule {\n  constructor(router, loader) {\n    const ref = loader.useRef('router');\n    router.events.subscribe(event => {\n      const navState = this.getCurrentNavigationState(router);\n      if (navState && navState.ignoreLoadingBar) {\n        return;\n      }\n      if (event instanceof NavigationStart) {\n        ref.start();\n      }\n      if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n        ref.complete();\n      }\n    });\n  }\n  getCurrentNavigationState(router) {\n    // `getCurrentNavigation` only available in angular `7.2`\n    const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n    if (currentNavigation && currentNavigation.extras) {\n      return currentNavigation.extras.state;\n    }\n    return {};\n  }\n}\nLoadingBarRouterModule.ɵfac = function LoadingBarRouterModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || LoadingBarRouterModule)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LoadingBarService));\n};\nLoadingBarRouterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoadingBarRouterModule,\n  imports: [RouterModule, LoadingBarModule],\n  exports: [RouterModule, LoadingBarModule]\n});\nLoadingBarRouterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingBarRouterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule, LoadingBarModule],\n      exports: [RouterModule, LoadingBarModule]\n    }]\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i2.LoadingBarService\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarRouterModule };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAM,yBAAN,MAA6B;AAAA,EAC3B,YAAY,QAAQ,QAAQ;AAC1B,UAAM,MAAM,OAAO,OAAO,QAAQ;AAClC,WAAO,OAAO,UAAU,WAAS;AAC/B,YAAM,WAAW,KAAK,0BAA0B,MAAM;AACtD,UAAI,YAAY,SAAS,kBAAkB;AACzC;AAAA,MACF;AACA,UAAI,iBAAiB,iBAAiB;AACpC,YAAI,MAAM;AAAA,MACZ;AACA,UAAI,iBAAiB,mBAAmB,iBAAiB,iBAAiB,iBAAiB,kBAAkB;AAC3G,YAAI,SAAS;AAAA,MACf;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,0BAA0B,QAAQ;AAEhC,UAAM,oBAAoB,OAAO,wBAAwB,OAAO,qBAAqB;AACrF,QAAI,qBAAqB,kBAAkB,QAAQ;AACjD,aAAO,kBAAkB,OAAO;AAAA,IAClC;AACA,WAAO,CAAC;AAAA,EACV;AACF;AACA,uBAAuB,OAAO,SAAS,+BAA+B,mBAAmB;AACvF,SAAO,KAAK,qBAAqB,wBAA2B,SAAY,MAAM,GAAM,SAAY,iBAAiB,CAAC;AACpH;AACA,uBAAuB,OAAyB,iBAAiB;AAAA,EAC/D,MAAM;AAAA,EACN,SAAS,CAAC,cAAc,gBAAgB;AAAA,EACxC,SAAS,CAAC,cAAc,gBAAgB;AAC1C,CAAC;AACD,uBAAuB,OAAyB,iBAAiB;AAAA,EAC/D,SAAS,CAAC,CAAC,cAAc,gBAAgB,GAAG,cAAc,gBAAgB;AAC5E,CAAC;AAAA,CACA,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,wBAAwB,CAAC;AAAA,IAC/F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,cAAc,gBAAgB;AAAA,MACxC,SAAS,CAAC,cAAc,gBAAgB;AAAA,IAC1C,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAS;AAAA,IACX,GAAG;AAAA,MACD,MAAS;AAAA,IACX,CAAC;AAAA,EACH,GAAG,IAAI;AACT,GAAG;",
  "names": []
}
