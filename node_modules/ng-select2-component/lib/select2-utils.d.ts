import { Select2Data, Select2Option, Select2UpdateValue, Select2Value } from './select2-interfaces';
export declare class Select2Utils {
    static getOptionByValue(data: Select2Data, value: Select2Value | null | undefined): Select2Option;
    static getOptionsByValue(data: Select2Data, value: Select2UpdateValue | null | undefined, multiple: boolean | null | undefined): Select2Option | Select2Option[];
    static getFirstAvailableOption(data: Select2Data): Select2Value;
    static valueIsNotInFilteredData(filteredData: Select2Data, value: Select2Value | null | undefined): boolean;
    static getPreviousOption(filteredData: Select2Data, hoveringValue: Select2Value | null | undefined): Select2Option;
    static getNextOption(filteredData: Select2Data, hoveringValue: Select2Value | null | undefined): Select2Option;
    static getReduceData(data: Select2Data, maxResults?: number): {
        result: Select2Data;
        reduce: boolean;
    };
    static getFilteredData(data: Select2Data, searchText: string | null, editPattern?: (str: string) => string): Select2Data;
    static getFilteredSelectedData(data: Select2Data, selectedOptions: Select2Option | Select2Option[] | null): Select2Data;
    static isSearchboxHiddex(data: Select2Data, minCountForSearch?: number | string): boolean;
    static isSelected(options: Select2Option | Select2Option[] | null, option: Select2Option, multiple: boolean | null | undefined): "true" | "false";
    static removeSelection(options: Select2Option | Select2Option[] | null, option: Select2Option): void;
    private static getOptionsCount;
    private static isNullOrUndefined;
    private static containSearchText;
    private static protectPattern;
    private static formatSansUnicode;
    private static formatPattern;
}
//# sourceMappingURL=select2-utils.d.ts.map